@using BookStore.DAL.Models
@model UpdateBookViewModel

@using (Html.BeginForm("Update", "admin", FormMethod.Post))
{
    <div class="pt-3">
        <div class="row justify-content-between mx-3">
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Book.Title)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Book.ID, new { @class = "form-control d-none", @content = $"{Model.Book.ID}" })
                    @Html.TextBoxFor(a => a.Book.Title, new { @class = "form-control", @content = $"{Model.Book.Title}" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.Title, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Book.Author)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Book.Author, new { @class = "form-control", @content = $"{Model.Book.Author}" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.Author, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Book.Editura)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Book.Editura, new { @class = "form-control", @content = $"{Model.Book.Editura}" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.Editura, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Book.Price)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Book.Price, new { @class = "form-control", @type = "number", @content = $"{Model.Book.Price}" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.Price, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-12 form-group">
                @Html.LabelFor(a => a.Book.BookTypeId)
                <div class="input-group">
                    @Html.DropDownListFor(a => a.ChosedBookType, Model.Types, "--Select--", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.BookTypeId, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-12 form-group">
                @Html.LabelFor(a => a.Book.Description)
                <div class="input-group">
                    @Html.TextAreaFor(a => a.Book.Description, new { @class = "form-control", @content = $"{Model.Book.Description}" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(a => a.Book.FormFile)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Book.FormFile, new { @class = "form-control", @type = "file", @accept = "image/*" })
                </div>
                @Html.ValidationMessageFor(a => a.Book.FormFile, "", new { @class = "text-danger", @content = $"{Model.Book.FormFile}" })
            </div>
            <div class="form-group">
                <img class="product-item" src="@Model.Book.Path" alt="ImageCover" />
            </div>
            <div class="my-3 col-lg-4">
                <input class="btn btn-block btn-success" type="submit" value="Salveaza">
            </div>
        </div>
    </div>
}